/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as GenerateRouteImport } from './routes/generate'
import { Route as GalleryRouteImport } from './routes/gallery'
import { Route as CrewsRouteImport } from './routes/crews'
import { Route as ClubsRouteImport } from './routes/clubs'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CrewsCreateRouteImport } from './routes/crews_.create'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo/start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo/start.api-request'
import { Route as DemoApiNamesRouteImport } from './routes/demo/api.names'
import { Route as ApiUploadClubLogoRouteImport } from './routes/api/upload/club-logo'
import { Route as ApiTrpcSplatRouteImport } from './routes/api/trpc/$'
import { Route as ApiAuthGoogleRouteImport } from './routes/api/auth/google'
import { Route as DemoStartSsrIndexRouteImport } from './routes/demo/start.ssr.index'
import { Route as DemoStartSsrSpaModeRouteImport } from './routes/demo/start.ssr.spa-mode'
import { Route as DemoStartSsrFullSsrRouteImport } from './routes/demo/start.ssr.full-ssr'
import { Route as DemoStartSsrDataOnlyRouteImport } from './routes/demo/start.ssr.data-only'
import { Route as ApiAuthGoogleCallbackRouteImport } from './routes/api/auth/google/callback'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const GenerateRoute = GenerateRouteImport.update({
  id: '/generate',
  path: '/generate',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryRoute = GalleryRouteImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => rootRouteImport,
} as any)
const CrewsRoute = CrewsRouteImport.update({
  id: '/crews',
  path: '/crews',
  getParentRoute: () => rootRouteImport,
} as any)
const ClubsRoute = ClubsRouteImport.update({
  id: '/clubs',
  path: '/clubs',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CrewsCreateRoute = CrewsCreateRouteImport.update({
  id: '/crews_/create',
  path: '/crews/create',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiNamesRoute = DemoApiNamesRouteImport.update({
  id: '/demo/api/names',
  path: '/demo/api/names',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiUploadClubLogoRoute = ApiUploadClubLogoRouteImport.update({
  id: '/api/upload/club-logo',
  path: '/api/upload/club-logo',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTrpcSplatRoute = ApiTrpcSplatRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthGoogleRoute = ApiAuthGoogleRouteImport.update({
  id: '/api/auth/google',
  path: '/api/auth/google',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrIndexRoute = DemoStartSsrIndexRouteImport.update({
  id: '/demo/start/ssr/',
  path: '/demo/start/ssr/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrSpaModeRoute = DemoStartSsrSpaModeRouteImport.update({
  id: '/demo/start/ssr/spa-mode',
  path: '/demo/start/ssr/spa-mode',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrFullSsrRoute = DemoStartSsrFullSsrRouteImport.update({
  id: '/demo/start/ssr/full-ssr',
  path: '/demo/start/ssr/full-ssr',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrDataOnlyRoute = DemoStartSsrDataOnlyRouteImport.update({
  id: '/demo/start/ssr/data-only',
  path: '/demo/start/ssr/data-only',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthGoogleCallbackRoute = ApiAuthGoogleCallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => ApiAuthGoogleRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/clubs': typeof ClubsRoute
  '/crews': typeof CrewsRoute
  '/gallery': typeof GalleryRoute
  '/generate': typeof GenerateRoute
  '/signup': typeof SignupRoute
  '/crews/create': typeof CrewsCreateRoute
  '/api/auth/google': typeof ApiAuthGoogleRouteWithChildren
  '/api/trpc/$': typeof ApiTrpcSplatRoute
  '/api/upload/club-logo': typeof ApiUploadClubLogoRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/api/auth/google/callback': typeof ApiAuthGoogleCallbackRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/clubs': typeof ClubsRoute
  '/crews': typeof CrewsRoute
  '/gallery': typeof GalleryRoute
  '/generate': typeof GenerateRoute
  '/signup': typeof SignupRoute
  '/crews/create': typeof CrewsCreateRoute
  '/api/auth/google': typeof ApiAuthGoogleRouteWithChildren
  '/api/trpc/$': typeof ApiTrpcSplatRoute
  '/api/upload/club-logo': typeof ApiUploadClubLogoRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/api/auth/google/callback': typeof ApiAuthGoogleCallbackRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/clubs': typeof ClubsRoute
  '/crews': typeof CrewsRoute
  '/gallery': typeof GalleryRoute
  '/generate': typeof GenerateRoute
  '/signup': typeof SignupRoute
  '/crews_/create': typeof CrewsCreateRoute
  '/api/auth/google': typeof ApiAuthGoogleRouteWithChildren
  '/api/trpc/$': typeof ApiTrpcSplatRoute
  '/api/upload/club-logo': typeof ApiUploadClubLogoRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/api/auth/google/callback': typeof ApiAuthGoogleCallbackRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr/': typeof DemoStartSsrIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/clubs'
    | '/crews'
    | '/gallery'
    | '/generate'
    | '/signup'
    | '/crews/create'
    | '/api/auth/google'
    | '/api/trpc/$'
    | '/api/upload/club-logo'
    | '/demo/api/names'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/api/auth/google/callback'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/clubs'
    | '/crews'
    | '/gallery'
    | '/generate'
    | '/signup'
    | '/crews/create'
    | '/api/auth/google'
    | '/api/trpc/$'
    | '/api/upload/club-logo'
    | '/demo/api/names'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/api/auth/google/callback'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  id:
    | '__root__'
    | '/'
    | '/clubs'
    | '/crews'
    | '/gallery'
    | '/generate'
    | '/signup'
    | '/crews_/create'
    | '/api/auth/google'
    | '/api/trpc/$'
    | '/api/upload/club-logo'
    | '/demo/api/names'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/api/auth/google/callback'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ClubsRoute: typeof ClubsRoute
  CrewsRoute: typeof CrewsRoute
  GalleryRoute: typeof GalleryRoute
  GenerateRoute: typeof GenerateRoute
  SignupRoute: typeof SignupRoute
  CrewsCreateRoute: typeof CrewsCreateRoute
  ApiAuthGoogleRoute: typeof ApiAuthGoogleRouteWithChildren
  ApiTrpcSplatRoute: typeof ApiTrpcSplatRoute
  ApiUploadClubLogoRoute: typeof ApiUploadClubLogoRoute
  DemoApiNamesRoute: typeof DemoApiNamesRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
  DemoStartSsrDataOnlyRoute: typeof DemoStartSsrDataOnlyRoute
  DemoStartSsrFullSsrRoute: typeof DemoStartSsrFullSsrRoute
  DemoStartSsrSpaModeRoute: typeof DemoStartSsrSpaModeRoute
  DemoStartSsrIndexRoute: typeof DemoStartSsrIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/generate': {
      id: '/generate'
      path: '/generate'
      fullPath: '/generate'
      preLoaderRoute: typeof GenerateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery': {
      id: '/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/crews': {
      id: '/crews'
      path: '/crews'
      fullPath: '/crews'
      preLoaderRoute: typeof CrewsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clubs': {
      id: '/clubs'
      path: '/clubs'
      fullPath: '/clubs'
      preLoaderRoute: typeof ClubsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/crews_/create': {
      id: '/crews_/create'
      path: '/crews/create'
      fullPath: '/crews/create'
      preLoaderRoute: typeof CrewsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/names': {
      id: '/demo/api/names'
      path: '/demo/api/names'
      fullPath: '/demo/api/names'
      preLoaderRoute: typeof DemoApiNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/upload/club-logo': {
      id: '/api/upload/club-logo'
      path: '/api/upload/club-logo'
      fullPath: '/api/upload/club-logo'
      preLoaderRoute: typeof ApiUploadClubLogoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/google': {
      id: '/api/auth/google'
      path: '/api/auth/google'
      fullPath: '/api/auth/google'
      preLoaderRoute: typeof ApiAuthGoogleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/': {
      id: '/demo/start/ssr/'
      path: '/demo/start/ssr'
      fullPath: '/demo/start/ssr'
      preLoaderRoute: typeof DemoStartSsrIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/spa-mode': {
      id: '/demo/start/ssr/spa-mode'
      path: '/demo/start/ssr/spa-mode'
      fullPath: '/demo/start/ssr/spa-mode'
      preLoaderRoute: typeof DemoStartSsrSpaModeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/full-ssr': {
      id: '/demo/start/ssr/full-ssr'
      path: '/demo/start/ssr/full-ssr'
      fullPath: '/demo/start/ssr/full-ssr'
      preLoaderRoute: typeof DemoStartSsrFullSsrRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/data-only': {
      id: '/demo/start/ssr/data-only'
      path: '/demo/start/ssr/data-only'
      fullPath: '/demo/start/ssr/data-only'
      preLoaderRoute: typeof DemoStartSsrDataOnlyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/google/callback': {
      id: '/api/auth/google/callback'
      path: '/callback'
      fullPath: '/api/auth/google/callback'
      preLoaderRoute: typeof ApiAuthGoogleCallbackRouteImport
      parentRoute: typeof ApiAuthGoogleRoute
    }
  }
}

interface ApiAuthGoogleRouteChildren {
  ApiAuthGoogleCallbackRoute: typeof ApiAuthGoogleCallbackRoute
}

const ApiAuthGoogleRouteChildren: ApiAuthGoogleRouteChildren = {
  ApiAuthGoogleCallbackRoute: ApiAuthGoogleCallbackRoute,
}

const ApiAuthGoogleRouteWithChildren = ApiAuthGoogleRoute._addFileChildren(
  ApiAuthGoogleRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ClubsRoute: ClubsRoute,
  CrewsRoute: CrewsRoute,
  GalleryRoute: GalleryRoute,
  GenerateRoute: GenerateRoute,
  SignupRoute: SignupRoute,
  CrewsCreateRoute: CrewsCreateRoute,
  ApiAuthGoogleRoute: ApiAuthGoogleRouteWithChildren,
  ApiTrpcSplatRoute: ApiTrpcSplatRoute,
  ApiUploadClubLogoRoute: ApiUploadClubLogoRoute,
  DemoApiNamesRoute: DemoApiNamesRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
  DemoStartSsrDataOnlyRoute: DemoStartSsrDataOnlyRoute,
  DemoStartSsrFullSsrRoute: DemoStartSsrFullSsrRoute,
  DemoStartSsrSpaModeRoute: DemoStartSsrSpaModeRoute,
  DemoStartSsrIndexRoute: DemoStartSsrIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
